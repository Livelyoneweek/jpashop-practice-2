plugins {
    id 'org.springframework.boot' version '2.7.2'
    id 'io.spring.dependency-management' version '1.0.12.RELEASE'
    id 'java'
}

group = 'jpabook'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'


configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-devtools'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-hibernate5'

//    sql 쿼리 로그가 남을 때 파라미터에 값 보이게 하기 위한 라이브러리, 운영에서는 성능저하를 따져봐야함
//    implementation 'com.gihub.gavlyukovskiy:p6spy-spring-boot-starter:1.5.6'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.h2database:h2'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'


    //querydsl
    implementation'com.querydsl:querydsl-jpa'

    // querydsl JPAAnnotationProcessor 사용 지정
    annotationProcessor("com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jpa")
    // java.lang.NoClassDefFoundError(javax.annotation.Entity) 발생 대응
    annotationProcessor("jakarta.persistence:jakarta.persistence-api")
    // java.lang.NoClassDefFoundError (javax.annotation.Generated) 발생 대응
    annotationProcessor("jakarta.annotation:jakarta.annotation-api")

}

clean {
    //인텔리제이 Annotation Processor 생성 위치
    delete file('src/main/generated')
}

tasks.named('test') {
    useJUnitPlatform()
}
